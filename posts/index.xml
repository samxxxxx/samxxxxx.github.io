<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on SAM.Net开发日常</title><link>https://samxxxxx.github.io/posts/</link><description>Recent content in Posts on SAM.Net开发日常</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 25 Feb 2023 16:06:50 +0800</lastBuildDate><atom:link href="https://samxxxxx.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>.Net DataReader映射到实体</title><link>https://samxxxxx.github.io/posts/dotnet-datareader-map/</link><pubDate>Sat, 25 Feb 2023 16:06:50 +0800</pubDate><guid>https://samxxxxx.github.io/posts/dotnet-datareader-map/</guid><description>aaa
#region Mapper public static IEnumerable&amp;lt;T&amp;gt; ReaderTo&amp;lt;T&amp;gt;(this IDataReader dataReader) { System.Diagnostics.Stopwatch sw = new System.Diagnostics.Stopwatch(); sw.Start(); var mapper = CreateMappingFunction(dataReader, typeof(T)); while (dataReader.Read()) { var result = mapper(dataReader as DbDataReader); yield return result is T ? (T)result : default(T); } sw.Stop(); Console.WriteLine(&amp;#34;耗时: {0} 毫秒.&amp;#34;, sw.ElapsedMilliseconds); } private static Func&amp;lt;DbDataReader, object&amp;gt; CreateMappingFunction(IDataReader reader, Type type) { //1. 取得sql select所有栏位名称 var names = Enumerable.Range(0, reader.FieldCount).Select(index =&amp;gt; reader.GetName(index)).ToArray(); //2. 取得mapping类别的属性资料 &amp;gt; 将index,sql栏位,class属性资料做好对应封装在一个变量内方便后面使用 var props = type.</description></item><item><title>.Net Wcf添加Knowntype</title><link>https://samxxxxx.github.io/posts/dotnet-wcf-config-knowntype/</link><pubDate>Sat, 25 Feb 2023 16:04:51 +0800</pubDate><guid>https://samxxxxx.github.io/posts/dotnet-wcf-config-knowntype/</guid><description>配置 &amp;lt;system.runtime.serialization&amp;gt; &amp;lt;dataContractSerializer&amp;gt; &amp;lt;declaredTypes&amp;gt; &amp;lt;add type = &amp;#34;Baidu.Modules.DataContract.Equipment.EquimentModel,TopStrong.Modules.DataContract,Version=1.0.0.0,Culture=neutral,PublicKeyToken=null, processorArchitecture=MSIL&amp;#34;&amp;gt; &amp;lt;knownType type = &amp;#34;Baidu.Modules.DataContract.Equipment.PointCheckStd,TopStrong.Modules.DataContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, processorArchitecture=MSIL&amp;#34;/&amp;gt; &amp;lt;/add&amp;gt; &amp;lt;/declaredTypes&amp;gt; &amp;lt;/dataContractSerializer&amp;gt; &amp;lt;/system.runtime.serialization&amp;gt;</description></item><item><title>.Net Wcf添加服务调试日志</title><link>https://samxxxxx.github.io/posts/net-wcf-add-log-enable/</link><pubDate>Sat, 25 Feb 2023 15:58:07 +0800</pubDate><guid>https://samxxxxx.github.io/posts/net-wcf-add-log-enable/</guid><description>在web.config文件中，将配置添加到configuration节中，重启服务后日志文件将写入到c:\temp\log\log_Traces.svclog
&amp;lt;system.diagnostics&amp;gt; &amp;lt;sources&amp;gt; &amp;lt;source name=&amp;#34;System.ServiceModel&amp;#34; switchValue=&amp;#34;Information, ActivityTracing&amp;#34; propagateActivity=&amp;#34;true&amp;#34;&amp;gt; &amp;lt;listeners&amp;gt; &amp;lt;add name=&amp;#34;traceListener&amp;#34; type=&amp;#34;System.Diagnostics.XmlWriterTraceListener&amp;#34; initializeData=&amp;#34;c:\temp\log\log_Traces.svclog&amp;#34; /&amp;gt; &amp;lt;/listeners&amp;gt; &amp;lt;/source&amp;gt; &amp;lt;/sources&amp;gt; &amp;lt;/system.diagnostics&amp;gt;</description></item><item><title>Hello World</title><link>https://samxxxxx.github.io/posts/my-first-post/</link><pubDate>Sat, 25 Feb 2023 11:48:44 +0800</pubDate><guid>https://samxxxxx.github.io/posts/my-first-post/</guid><description>Console.WriteLine(&amp;#34;hellow World&amp;#34;); mklink 命令是将文件或目录建立双向连接, 该变任何一方都会发生变化, 其主要文件链接有三: 符号链接(软件接), 目录连接(软件接), 文本文件链接(硬连接), 可以这样理解, 软连接, 是建立快捷方式, 硬连接, 是进行复制
win + R 打开资源管理器输入: cmd 点击: 确定 在 cmd 里面输入: mklink /? 来查看 mklink 命令和参数的使用 语法: mklink [[/D] | [/H] | [/J]] Link Target 参数: /D 创建符号目录连接,(软连接) /H 文本文件链接(硬连接) /J 创建目录连接(软连接) link 要创建新链接的文件 Target 源文件 ------------------------------------------------------ 参数 /D 和 /J 都是建立目录连接, /H 是建立文件链接</description></item></channel></rss>